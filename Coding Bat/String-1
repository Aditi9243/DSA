//Ques1 - helloName
public String helloName(String name) {
  return "Hello "+name+"!";
}

//Ques2 - makeAbba
public String makeAbba(String a, String b) {
  return a+b+b+a;
}

//Ques3 - makeTags
public String makeTags(String tag, String word) {
  return "<"+tag+">"+word+"</"+tag+">";
}

//Ques4 - makeOutWord
public String makeOutWord(String out, String word) {
    int mid = out.length()/2;
    return out.substring(0,mid)+word+out.substring(mid);
}

//Ques5 - extraEnd
public String extraEnd(String str) {
    if(str.length()<2)
      return "";
    
    String end = str.substring(str.length()-2);
    return end+end+end;
}

//Ques6 - firstTwo
public String firstTwo(String str) {
    if(str.length()<2)
      return str;
    
    return str.substring(0,2);
}

//Ques7 - firstHalf
public String firstHalf(String str) {
    int mid = str.length()/2;
    return str.substring(0,mid);
}

//Ques8 - withoutEnd
public String withoutEnd(String str) {
    if(str.length()<2)
      return "";
    
    return str.substring(1,str.length()-1);
}

//Ques9 - comboString
public String comboString(String a, String b) {
    if(a.length()<b.length())
      return a+b+a;
    else
      return b+a+b;
}

//Ques10 - nonStart
public String nonStart(String a, String b) {
    return a.substring(1)+b.substring(1);
}

//Ques11 - left2
public String left2(String str) {
    if(str.length()<2)
      return "";
    String front = str.substring(0,2);
    return str.substring(2)+front;
}

//Ques12 - right2
public String right2(String str) {
    if(str.length()<2)
      return "";
    
    String end = str.substring(str.length()-2);
    return end+str.substring(0,str.length()-2);
}

//Ques13 - theEnd
public String theEnd(String str, boolean front) {
    if(str.length()<2)
      return str;
    if(front)
      return str.substring(0,1);
    else
      return str.substring(str.length()-1);
}

//Ques14 - withouEnd2
public String withouEnd2(String str) {
    if(str.length()<3)
      return "";
    
    return str.substring(1,str.length()-1);
  }

//Ques15 - middleTwo
public String middleTwo(String str) {
    if(str.length()<2)
      return str;
    
    int mid = str.length()/2;
    return str.substring(mid-1,mid+1);
}

//Ques16 - endsLy
public boolean endsLy(String str) {
    if(str.length()<2)
      return false;
    
    if(str.substring(str.length()-2).equals("ly"))
      return true;
    else
      return false;
}

//Ques17 - nTwice
public String nTwice(String str, int n) {
  if(str.length()<n)
    return "";
    
  String front = str.substring(0,n);
  String end = str.substring(str.length()-n);
  return front+end;
}

//Ques18 - twoChar

//Ques19 - middleThree
public String middleThree(String str) {
  if(str.length()<3)
    return "";
  if(str.length()==3)
    return str;
  
  int mid = str.length()/2;
  return str.substring(mid-1, mid+2);
}

//Ques20 - hasBad
public boolean hasBad(String str) {
  if(str.length()<3)
    return false;
    
  if(str.length() == 3)
  {
    if(str.equals("bad"))
     return true; 
    else
      return false;
  }
  
  else if(str.substring(0,3).equals("bad") || str.substring(1,4).equals("bad"))
      return true;

  return false;
}

//Ques21 - atFirst
public String atFirst(String str) {
  if(str.length()<2) {
      if(str.length()==1)
        return str+"@";
      return "@@";
  }
    
  return str.substring(0,2);
}

//Ques22 - lastChars
public String lastChars(String a, String b) {
  if(a.length() == 0 && b.length() != 0)
    return "@" + b.substring(b.length()-1);
  else if(a.length() != 0 && b.length() == 0)
    return a.charAt(0)+"@";
  else if(a.length() != 0 && b.length() != 0)
    return a.charAt(0) + b.substring(b.length()-1);
  else
    return "@@";
  
  // if(a.length()<2 || b.length()<2) {
  //   if(a.length() == 0) {
  //     a= a + "@";
  //   }
  //  if(b.length() == 0) {
  //     b = b + "@";
  //   }
  // }
  //return a.substring(0,1) + b.substring(b.length()-1);
}

//Ques23 - conCat
public String conCat(String a, String b) {
  if(a.length()==0 || b.length()==0)
    return a+b;
    
  if(a.charAt(a.length()-1) == b.charAt(0))
    return a+b.substring(1);
  else
    return a+b;
}

//Ques24 - lastTwo
public String lastTwo(String str) {
  if(str.length()<2)
    return str;
    
  char end = str.charAt(str.length()-1);
  char sEnd = str.charAt(str.length()-2);
  return str.substring(0, str.length()-2)+end+sEnd;
}

//Ques25 - seeColor
public String seeColor(String str) {
  if(str.length()<=3)
  {
    if(str.length() == 3 && str.substring(0,3).equals("red")) 
      return "red";
    return "";
    
  }
  
  if(str.substring(0,3).equals("red")) 
    return "red";
  else if(str.substring(0,4).equals("blue"))
    return "blue";
  else
    return "";
}

//Ques26 - frontAgain
public boolean frontAgain(String str) {
  if(str.length()<2)
    return false;
  
  if(str.length()==2)
    return true;
  
  String front = str.substring(0,2);
  return str.substring(str.length()-2).equals(front);
  
}

//Ques27 - minCat
public String minCat(String a, String b) {
  if(a.length()>b.length()) {
    int difference = a.length() - b.length();
    return a.substring(difference) + b;
  } else if(a.length()<b.length()) {
    int difference = b.length() - a.length();
    return a + b.substring(difference);
  }
  return a+b;
}

//Ques28 - extraFront
public String extraFront(String str) {
  if(str.length()<2)
    return str+str+str;
    
  String front = str.substring(0,2);
  return front+front+front;
}

//Ques29 - without2
public String without2(String str) {
  if(str.length()<2)
    return str;
  if(str.length()==2)
    return "";
  
  String front = str.substring(0,2);
  String end = str.substring(str.length()-2);
  
  if(front.equals(end))
    return str.substring(2);
  else
    return str;
}

//Ques30 - deFront
public String deFront(String str) {
  if(str.length()<2)
  {
    if(str.length()==1 && str.equals("a"))
      return "a";
    
    return "";
  }
  String ans = str.substring(2);
  if(str.charAt(1) == 'b')
    ans = "b"+ans;
  if(str.charAt(0) == 'a')
    ans = "a"+ans;
  return ans;
}

//Ques31 - startWord
public String startWord(String str, String word) {
  if(str.length()<word.length())
    return "";
  
  String sub = str.substring(0,word.length());
  if(sub.equals(word))
    return sub;
  else if(sub.substring(1).equals(word.substring(1)))
    return sub;
  return "";
}

//Ques32 - withoutX
public String withoutX(String str) {
  if(str.length() < 2)
  {
    if(str.length()==1 && str.equals("x"))
      return "";
    return str;
  }
  
  char front = str.charAt(0);
  char end = str.charAt(str.length()-1);
  String ans = str.substring(1,str.length()-1);
  
  if(front != 'x')
    ans = front + ans;
  
  if(end != 'x')
    ans += end;
  
  return ans;
}

//Ques33 - withoutX2
public String withoutX2(String str) {
  if(str.length()<2)
  {
    if(str.length() == 1 && str.charAt(0)=='x')
      return "";
    return str;
  }
  
  String ans = "";
  if(str.charAt(0) != 'x')
    ans += str.charAt(0);
  if(str.charAt(1) != 'x')
    ans += str.charAt(1);
  
  return ans + str.substring(2);
}
