//Link - https://www.interviewbit.com/problems/matrix-median/

Problem Description
 
Given a matrix of integers A of size N x M in which each row is sorted.
Find and return the overall median of matrix A.
NOTE: No extra memory is allowed.
NOTE: Rows are numbered from top to bottom and columns are numbered from left to right.

Problem Constraints
1 <= N, M <= 10^5
1 <= N*M <= 10^6
1 <= A[i] <= 10^9
N*M is odd


//Without binary search
public class Solution {
    public int findMedian(int[][] A) {
        int r = A.length;
        int c = A[0].length;
        int[] arr = new int[r*c];
        
        int k=0;
        for(int i=0; i<r; i++)
        {
            for(int j=0; j<c; j++)
            {
                arr[k++] = A[i][j];
            }
        }
        
        Arrays.sort(arr);
        return arr[(r*c)/2];
    }
}

//Using binary search and without extra space
public class Solution {
    public int findMedian(int[][] A) {
        int r = A.length;
        int c = A[0].length;
        
        int low = 1;
        int high = Integer.MAX_VALUE;
        
        while(low <= high)
        {
            int mid = (low+high)/2;
            int count = 0;
            
            for(int i=0; i<r; i++)
            {
                count += countSmallerThanMid(A[i], mid, c); 
            }
            
            if(count <= (r*c)/2)
                low = mid+1;
            else
                high = mid-1;
        }
        return low;
    }
    
    private int countSmallerThanMid(int[] nums, int mid, int col)
    {
        int low = 0, high = col-1;
        
        while(low <= high)
        {
            int m = (low + high) / 2;
            if (nums[m] <= mid) {
                low = m + 1;
            } 
            else {
                high = m - 1;
            }
        }
        
        return low;
    }
}

