class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        
        for(int i=0; i<numRows; i++)
        {
            List<Integer> temp = new ArrayList<>();
            
            for(int j=0; j<i+1; j++)
            {
                if(j==0 || j==i)
                    temp.add(1);
                
                else
                {
                    int a = ans.get(i-1).get(j-1);
                    int b = ans.get(i-1).get(j);
                    temp.add(a+b);
                }
            }
            
            ans.add(temp);           
        }
        
        return ans;
    }
}

//Moving from front
[1,3,3,1]
----
[1,1,3,3,1]
[1,4,3,3,1]
[1,4,6,3,1]
[1,4,6,4,1] ** added to ans

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> row = new ArrayList<>();
        for(int i=0; i<numRows; i++)
        {
            row.add(0, 1);
            for(int j=1; j<row.size()-1; j++)
            {
                row.set(j, row.get(j)+row.get(j+1));
            }
            ans.add(new ArrayList<>(row));
        }
        
        return ans;
    }
}

//Moving Backward
[1,3,3,1]
----
[1,3,3,4]
[1,3,6,4]
[1,4,6,4]
[1,4,6,4,1] ** added to ans

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> row = new ArrayList<>();
        for(int i=0; i<numRows; i++)
        {
            for(int j=row.size()-1; j>=1; j--)
            {
                row.set(j, row.get(j)+row.get(j-1));
            }
            row.add(1);
            ans.add(new ArrayList<>(row));
        }
        
        return ans;
    }
}