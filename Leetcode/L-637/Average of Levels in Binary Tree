/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        if(root == null)
        {
            List<Double> base = new LinkedList<>();
            return base;
        }
        
        List<Double> ans = new LinkedList<>();;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        
        while(q.size() > 0)
        {
            double sum = 0;
            int size = q.size();
            for(int i=0; i<size; i++)
            {
                TreeNode node = q.peek();
                sum += node.val;
                q.remove();
                
                if(node.left != null)
                {
                    q.add(node.left);
                }
                
                if(node.right != null)
                {
                    q.add(node.right);
                }
            }
            
            ans.add(sum/size);
        }
        
        return ans;
    }
}