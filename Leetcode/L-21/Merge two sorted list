/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1 == null) return list2;
        if(list2 == null) return list1;
        if(list1.val < list2.val)
        {
            list1.next = mergeTwoLists(list1.next, list2);
            return list1;
        }
        else
        {
            list2.next = mergeTwoLists(list1, list2.next);
            return list2;
        }

    }
//         ListNode ans = new ListNode();
//         ListNode l = ans;1
        
//         ListNode c1 = list1;
//         ListNode c2 = list2;
//         while(c1 != null && c2 != null)
//         {
//             if(c1.val < c2.val)
//             {
//                 ListNode temp = new ListNode(c1.val, null);
//                 if(size(l) == 0)
//                     l=temp;
//                 else
//                     l.next = temp;
                
//                 c1 = c1.next;
//             }
//             else
//             {
//                 ListNode temp = new ListNode(c2.val, null);
//                 if(size(l) == 0)
//                     l=temp;
//                 else
//                     l.next = temp;
//                 c2 = c2.next;
//             }
//         }
        
//         return ans;
    
}