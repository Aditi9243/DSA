class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        solution(ans, new ArrayList<>(), candidates, target, 0);
        return ans;
    }
    
    public void solution(List<List<Integer>> ans, List<Integer> temp, int []arr, int target, int start)
    {
        if(target == 0) ans.add(new ArrayList<>(temp));
        if(target < 0) return;
        
        for(int i=start; i<arr.length; i++)
        {
            temp.add(arr[i]);   //adding element
            solution(ans, temp, arr, target-arr[i], i);
            temp.remove(temp.size()-1); //removing added element - backtrack
        }
    }
}