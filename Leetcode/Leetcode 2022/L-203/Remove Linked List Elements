/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        if(head == null || (head.next == null && head.val == val))
            return null;
        
        ListNode ans = new ListNode(-1);
        ListNode curr = ans;
        while(head != null)
        {
            if(head.val != val)
            {
               ListNode node = new ListNode(head.val);
               curr.next = node;
               curr = curr.next;
            }
            head = head.next; 
        }
        return ans.next;
    }
}

//Recursion
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        if(head == null)
            return null;
        
        head.next = removeElements(head.next, val);
        return (head.val == val)? head.next : head;
    }
}

//Iterative
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        if(head == null)
            return null;
        
        ListNode ans = new ListNode(-1);
        ans.next = head;
        ListNode curr = head, prev = ans;
        
        while(curr != null)
        {
            if(curr.val == val)
            {
                prev.next = curr.next;
            }
            else
            {
                prev = prev.next;
            }
            
            curr = curr.next;
        }
        return ans.next;
    }
}

