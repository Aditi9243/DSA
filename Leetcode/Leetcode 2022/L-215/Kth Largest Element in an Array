class Solution {
    public int findKthLargest(int[] nums, int k) {
        Arrays.sort(nums);
        return nums[nums.length-k];
        
        // PriorityQueue<Integer> largeK = new PriorityQueue<>();
        // for(int i=0; i<nums.length; i++)
        // {
        //     largeK.add(nums[i]);
        //     if(largeK.size() > k)
        //         largeK.remove();
        // }
        // return largeK.remove();
        
//         for(int i=0; i<nums.length; i++)
//         {
//             for(int j=0; j<nums.length-i-1; j++)
//             {
//                 if(nums[j] > nums[j+1])
//                 {
//                     int temp = nums[j];
//                     nums[j] = nums[j+1];
//                     nums[j+1] = temp;
//                 }
//             }
//         }
        
//         return nums[nums.length-k];
    }
}

//Note - Try to implment different sorting techniques in this program***