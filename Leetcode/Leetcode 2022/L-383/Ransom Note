class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        int []arr = new int[26];
        
        for(int i=0; i<magazine.length(); i++)
        {
            arr[magazine.charAt(i) - 'a']++;
        }
        
        for(int i=0; i<ransomNote.length(); i++)
        {
            if(--arr[ransomNote.charAt(i) - 'a'] < 0)
                return false;
        }
        
        return true;
    }
}

//ascii value
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        int []arr = new int[128];
        
        for(char c : magazine.toCharArray())
        {
            arr[c]++;
        }
        
        for(char c : ransomNote.toCharArray())
        {
            if(--arr[c] < 0)
                return false;
        }
        
        return true;
    }
}

//Using hashmap
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character, Integer> hm = new HashMap<>();
        
        for(char c : magazine.toCharArray())
        {
            int count = hm.containsKey(c) ? hm.get(c)+1 : 1;
            //int count = hm.getOrDefault(c, 0)+1;
            hm.put(c, count);
        }
        
        for(char c : ransomNote.toCharArray())
        {
            int newCount = hm.containsKey(c) ? hm.get(c)-1 : -1;
            if(newCount == -1)
                return false;
            hm.put(c, newCount);
        }
        
        return true;
    }
}