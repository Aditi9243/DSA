class Solution {
    public int[] sortArrayByParity(int[] nums) {
        ArrayList<Integer> odd = new ArrayList<>();
        ArrayList<Integer> even = new ArrayList<>();
        
        for(int num : nums) 
        {
            if(num%2 == 0)
                even.add(num);
            else
                odd.add(num);
        }
        
        int i=0;
        while(even.size() > 0)
        {
            nums[i] = even.remove(0);
            i++;
        }
        
        while(odd.size() > 0)
        {
            nums[i] = odd.remove(0);
            i++;
        }
        
        return nums;
    }
}

class Solution {
    public int[] sortArrayByParity(int[] nums) {
        // i = even element index
        // j = element need to be swapped
        int i=0;
        for(int j=0; j<nums.length; j++)
        {
            if(nums[j]%2 == 0)
            {
                int temp = nums[j];
                nums[j] = nums[i];
                nums[i] = temp;
                i++;
            }
        }
        
        return nums;
    }
}

class Solution {
    public int[] sortArrayByParity(int[] nums) {
        int []ans = new int[nums.length];
        int start = 0;
        int end = nums.length-1;
        for(int num : nums)
        {
            if(num%2 == 0)
                ans[start++] = num;
            else
                ans[end--] = num;
        }
        return ans;
    }
}